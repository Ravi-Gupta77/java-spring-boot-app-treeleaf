name: CI/CD Pipeline for build & deploy into EKS cluster

on:
  push:
    branches: 
      - main
      - qa
    paths-ignore:
      - 'README.md'
      - '.git*'

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  awsAccountNumber: ${{ secrets.AWS_ACCOUNT_ID }}
  awsIamRoleSessionDuration: 3600
  awsRegion: ${{ secrets.AWS_REGION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.awsAccountNumber }}:role/${{ secrets.OIDC_ROLE }}
          role-session-name: OIDCSession
          aws-region: ${{ env.awsRegion }}
          role-duration-seconds: ${{ env.awsIamRoleSessionDuration }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build with Maven
        run: mvn package -DskipTests

      - name: Build Docker Image
        run: docker build -t dev-java-springboot-app .

      - name: Tag and Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dev-java-springboot
          IMAGE_TAG: latest
        run: |
          docker tag dev-java-springboot:${IMAGE_TAG} ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name java-springboot-app
          
      - name: Deploy to EKS using helm
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          helm upgrade --install dev-java-springboot-app ./helm \
            --set image.repository=${ECR_REGISTRY}/dev-java-springboot-app \
            --set image.tag=${IMAGE_TAG} \
            --namespace dev \ 
            --create-namespace


